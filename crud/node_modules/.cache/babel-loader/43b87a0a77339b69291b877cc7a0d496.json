{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\proyectos react\\\\crud\\\\crudsencillo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // Import Worker\n\nimport { Worker } from '@react-pdf-viewer/core'; // Import the main Viewer component\n\nimport { Viewer } from '@react-pdf-viewer/core'; // Import the styles\n\nimport '@react-pdf-viewer/core/lib/styles/index.css'; // default layout plugin\n\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout'; // Import styles of default layout plugin\n\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // creating new plugin instance\n  const defaultLayoutPluginInstance = defaultLayoutPlugin(); // pdf file onChange state\n\n  const [pdfFile, setPdfFile] = useState(null); // pdf file error state\n\n  const [pdfError, setPdfError] = useState(''); // handle file onChange event\n\n  const allowedFiles = ['application/pdf'];\n\n  const handleFile = e => {\n    let selectedFile = e.target.files[0]; // console.log(selectedFile.type);\n\n    if (selectedFile) {\n      if (selectedFile && allowedFiles.includes(selectedFile.type)) {\n        let reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n\n        reader.onloadend = e => {\n          setPdfError('');\n          setPdfFile(e.target.result);\n        };\n      } else {\n        setPdfError('Not a valid pdf: Please select only PDF');\n        setPdfFile('');\n      }\n    } else {\n      console.log('please select a PDF');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Upload PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        onChange: handleFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), pdfError && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: pdfError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"View PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer\",\n      children: [pdfFile && /*#__PURE__*/_jsxDEV(Worker, {\n        workerUrl: \"https://unpkg.com/pdfjs-dist@2.12.313/build/pdf.worker.min.js\",\n        children: /*#__PURE__*/_jsxDEV(Viewer, {\n          fileUrl: pdfFile,\n          plugins: [defaultLayoutPluginInstance]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), !pdfFile && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"No file is selected yet\"\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"L+/3kl4HO2F6/mpUcapQ0f2tGoU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ASUS/Documents/proyectos react/crud/crudsencillo/src/App.js"],"names":["useState","Worker","Viewer","defaultLayoutPlugin","App","defaultLayoutPluginInstance","pdfFile","setPdfFile","pdfError","setPdfError","allowedFiles","handleFile","e","selectedFile","target","files","includes","type","reader","FileReader","readAsDataURL","onloadend","result","console","log"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB,C,CAEA;;AACA,SAASC,MAAT,QAAuB,wBAAvB,C,CACA;;AACA,SAASC,MAAT,QAAuB,wBAAvB,C,CACA;;AACA,OAAO,6CAAP,C,CACA;;AACA,SAASC,mBAAT,QAAoC,kCAApC,C,CACA;;AACA,OAAO,uDAAP;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAMC,2BAA2B,GAAGF,mBAAmB,EAAvD,CAHa,CAKb;;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAsBP,QAAQ,CAAC,IAAD,CAApC,CANa,CAQb;;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAAwBT,QAAQ,CAAC,EAAD,CAAtC,CATa,CAYb;;AACA,QAAMU,YAAY,GAAG,CAAC,iBAAD,CAArB;;AACA,QAAMC,UAAU,GAAIC,CAAD,IAAM;AACvB,QAAIC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAnB,CADuB,CAEvB;;AACA,QAAGF,YAAH,EAAgB;AACd,UAAGA,YAAY,IAAEH,YAAY,CAACM,QAAb,CAAsBH,YAAY,CAACI,IAAnC,CAAjB,EAA0D;AACxD,YAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,QAAAA,MAAM,CAACE,aAAP,CAAqBP,YAArB;;AACAK,QAAAA,MAAM,CAACG,SAAP,GAAkBT,CAAD,IAAK;AACpBH,UAAAA,WAAW,CAAC,EAAD,CAAX;AACAF,UAAAA,UAAU,CAACK,CAAC,CAACE,MAAF,CAASQ,MAAV,CAAV;AACD,SAHD;AAID,OAPD,MAQI;AACFb,QAAAA,WAAW,CAAC,yCAAD,CAAX;AACAF,QAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,KAbD,MAcI;AACFgB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AACF,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAGE;AAAA,8BAEE;AAAA,+BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AACA,QAAA,QAAQ,EAAEb;AADV;AAAA;AAAA;AAAA;AAAA,cALF,EAUGH,QAAQ,iBAAE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAA+BA;AAA/B;AAAA;AAAA;AAAA;AAAA,cAVb;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAmBE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBAGGF,OAAO,iBACN,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,+DAAlB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,OAAjB;AACA,UAAA,OAAO,EAAE,CAACD,2BAAD;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJJ,EAWG,CAACC,OAAD,iBAAU;AAAA;AAAA,uBAXb;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAzEQF,G;;KAAAA,G;AA2ET,eAAeA,GAAf","sourcesContent":["import {useState} from 'react'\n\n// Import Worker\nimport { Worker } from '@react-pdf-viewer/core';\n// Import the main Viewer component\nimport { Viewer } from '@react-pdf-viewer/core';\n// Import the styles\nimport '@react-pdf-viewer/core/lib/styles/index.css';\n// default layout plugin\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout';\n// Import styles of default layout plugin\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';\n\nfunction App() {\n\n  // creating new plugin instance\n  const defaultLayoutPluginInstance = defaultLayoutPlugin();\n\n  // pdf file onChange state\n  const [pdfFile, setPdfFile]=useState(null);\n\n  // pdf file error state\n  const [pdfError, setPdfError]=useState('');\n\n\n  // handle file onChange event\n  const allowedFiles = ['application/pdf'];\n  const handleFile = (e) =>{\n    let selectedFile = e.target.files[0];\n    // console.log(selectedFile.type);\n    if(selectedFile){\n      if(selectedFile&&allowedFiles.includes(selectedFile.type)){\n        let reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n        reader.onloadend=(e)=>{\n          setPdfError('');\n          setPdfFile(e.target.result);\n        }\n      }\n      else{\n        setPdfError('Not a valid pdf: Please select only PDF');\n        setPdfFile('');\n      }\n    }\n    else{\n      console.log('please select a PDF');\n    }\n  }\n\n  return (\n    <div className=\"container\">\n\n      {/* Upload PDF */}\n      <form>\n\n        <label><h5>Upload PDF</h5></label>\n        <br></br>\n\n        <input type='file' className=\"form-control\"\n        onChange={handleFile}></input>\n\n        {/* we will display error message in case user select some file\n        other than pdf */}\n        {pdfError&&<span className='text-danger'>{pdfError}</span>}\n\n      </form>\n\n      {/* View PDF */}\n      <h5>View PDF</h5>\n      <div className=\"viewer\">\n\n        {/* render this if we have a pdf file */}\n        {pdfFile&&(\n          <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.12.313/build/pdf.worker.min.js\">\n            <Viewer fileUrl={pdfFile}\n            plugins={[defaultLayoutPluginInstance]}></Viewer>\n          </Worker>\n        )}\n\n        {/* render this if we have pdfFile state null   */}\n        {!pdfFile&&<>No file is selected yet</>}\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}